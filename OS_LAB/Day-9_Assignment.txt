Q-What is the need of memory management?

Solution:

In CPU scheduling we see that how the CPU can be shared by a set of processes.
As a result of this CPU Utilization, as well as speed of the computer's response
to its users could be improved.
To realize this increase in performance , however, we must keep several processes in memory
that is, we must share memory.

For this Memory management is necessary.

• This technique decides which process will get memory at what time.
• It also keeps the count of how much memory can be allocated to a process.
• It tracks when memory is freed or unallocated and updates the status.
• The memory management function keeps track of the status of each memory location, either allocated or free
• Subdividing memory to accommodate multiple processes
• Memory needs to be allocated to ensure a reasonable supply of ready processes to consume available processor time

-------------------------------------------------------------------------------------------------------------------------------------------

Assignment: Given free memory partitions of 100K, 500K, 200K, 300K, and 600K (in order), how would each of the First-fit, Best-fit, and Worst-fit algorithms 
place processes of 212K, 417K, 112K, and 426K (in order)?
Which algorithm makes the most efficient use of memory?

Solution:


First fit-->                           Best fir-->                                       Worst fit --->
-------------                          -----------------                              -------------------
100k-                              	100k-                                          100k-
500k-212k                              	500k-417k                                      500k-417k
200k-112k                         	200k-112k                                      200k-
300k-                               	300k-212k                                      300k-112k
600k-417k                              	600k-426k                                      600k-212k
-------------                          -----------------                              -------------------
426k has to wait									426k has to wait
--------------------------------------------------------------------------------------------------------------------------------------------------------------


